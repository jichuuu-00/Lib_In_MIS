# Generated by Django 4.1.3 on 2022-11-20 18:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('author_code', models.IntegerField(db_column='Author_code', primary_key=True, serialize=False)),
                ('author_name', models.CharField(blank=True, db_column='Author_name', max_length=45, null=True)),
            ],
            options={
                'db_table': 'author',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('book_code', models.AutoField(db_column='Book_code', primary_key=True, serialize=False)),
                ('isbn', models.CharField(db_column='ISBN', max_length=45)),
                ('title', models.CharField(db_column='TITLE', max_length=45)),
                ('edition', models.CharField(db_column='Edition', max_length=45)),
                ('price', models.CharField(db_column='Price', max_length=45)),
                ('public_year', models.CharField(db_column='Public_year', max_length=45)),
            ],
            options={
                'db_table': 'book',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BookLocation',
            fields=[
                ('location_code', models.IntegerField(db_column='Location_code', primary_key=True, serialize=False)),
                ('location', models.CharField(db_column='Location', max_length=45)),
            ],
            options={
                'db_table': 'book_location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_code', models.IntegerField(db_column='Category_code', primary_key=True, serialize=False)),
                ('category_name', models.CharField(blank=True, db_column='Category_name', max_length=45, null=True)),
            ],
            options={
                'db_table': 'category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('man_code', models.IntegerField(db_column='Man_code', primary_key=True, serialize=False)),
                ('man_name', models.CharField(db_column='Man_name', max_length=45)),
                ('man_phone', models.CharField(db_column='Man_phone', max_length=45)),
                ('man_email', models.CharField(db_column='Man_email', max_length=45)),
                ('id', models.CharField(db_column='ID', max_length=45)),
                ('pw', models.CharField(db_column='PW', max_length=45)),
            ],
            options={
                'db_table': 'manager',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('mem_code', models.IntegerField(db_column='Mem_code', primary_key=True, serialize=False)),
                ('mem_name', models.CharField(db_column='Mem_name', max_length=45)),
                ('mem_gender', models.CharField(db_column='Mem_gender', max_length=45)),
                ('id', models.CharField(db_column='ID', max_length=45)),
                ('pw', models.CharField(db_column='PW', max_length=45)),
                ('mem_email', models.CharField(db_column='Mem_email', max_length=45)),
                ('mem_phone', models.CharField(db_column='Mem_phone', max_length=45)),
                ('mem_address', models.CharField(db_column='Mem_address', max_length=45)),
            ],
            options={
                'db_table': 'member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('publisher_code', models.IntegerField(db_column='Publisher_code', primary_key=True, serialize=False)),
                ('publisher_name', models.CharField(blank=True, db_column='Publisher_name', max_length=45, null=True)),
            ],
            options={
                'db_table': 'publisher',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BookAuthor',
            fields=[
                ('book_code', models.OneToOneField(db_column='Book_code', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='accountapp.book')),
            ],
            options={
                'db_table': 'book_author',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BookCategory',
            fields=[
                ('book_code', models.OneToOneField(db_column='Book_code', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='accountapp.book')),
            ],
            options={
                'db_table': 'book_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BookManage',
            fields=[
                ('book_code', models.OneToOneField(db_column='Book_code', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='accountapp.book')),
                ('isrental', models.CharField(db_column='IsRental', max_length=45)),
            ],
            options={
                'db_table': 'book_manage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rental',
            fields=[
                ('mem_code', models.OneToOneField(db_column='Mem_code', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='accountapp.member')),
                ('return_date', models.CharField(db_column='Return_date', max_length=45)),
            ],
            options={
                'db_table': 'return',
                'managed': False,
            },
        ),
    ]
